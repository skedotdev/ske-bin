#!/usr/bin/env php
<?php

if (!in_array(PHP_SAPI, ['cli', 'phpdbg'])) {
	exit_error('Cannot run %s from %s', __FILE__, PHP_SAPI);
}

['name' => $command_name, 'args' => $command_args] = parse_cmd($argc, $argv);

if (__FILE__ !== realpath($command_name) && basename(__FILE__) !== basename($command_name)) {
	exit_error('Cannot run %s from %s', __FILE__, $command_name);
}

cmd_route('ske', fn() => die("Welcome to Ske!" . PHP_EOL));

execute_cmd($command_name, $command_args);

function parse_cmd(int $argc, array $argv): array {
	if ($argc !== count($argv)) {
		exit_error('Wrong arguments count');
	}

	if ($argc < 1) {
		exit_error('No argument given');
	}

	return ['name' => array_shift($argv), 'args' => $argv];
}

function cmd_route(string $name, ?callable $action = null): ?callable {
	static $routes;
	if (isset($action)) {
		return $routes[$name] = $action;
	}

	$name = realpath($name);
	$name = substr($name, strlen(getcwd()));
	$name = trim($name, DIRECTORY_SEPARATOR);

	if ($routes) {
		foreach ($routes as $pattern => $action) {
			if (preg_match("/^$pattern$/", $name, $matches)) {
				return $action;
			}
		}
	}
	return null;
}

function execute_cmd(string $name, array $args): mixed {
	if ($process = cmd_route($name)) {
		return $process(...$args);
	}
	exit_error("Command $name not found");
}

function exit_error(string $message, mixed ...$args): void {
	echo_error($message, ...$args);
	exit(1);
}

function echo_error(string $message, mixed ...$args): void {
	send(STDOUT, $message, ...$args);
}

function send($stream, $message, mixed ...$args): void {
	$message .= PHP_EOL;

	if (empty($args)) {
		fwrite($stream, $message);
	}
	else {
		fprintf($stream, $message, ...$args);
	}
}
